version: 2.1


jobs:
  build:
    docker:
      - image: circleci/python:2.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: circleci/python:3.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
       - checkout
       - run:
           command: |
             pip install --user sqlalchemy
             pip install --user python-dateutil
             python setup.py install --user
             sudo apt update
             sudo apt install python3-pip
             pip3 install --user sqlalchemy
             pip3 install --user python-dateutil
             rm -rf build/
             python3 setup.py install --user
       - persist_to_workspace:
           root: ~/.local
           paths:
             - lib # Save installed Python libraries (including dbp itself)
  unittest:
    docker:
      - image: circleci/python:2.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
       - checkout
       - attach_workspace:
           at: ~/.local
       - run:
           command: |
             python unit_tests/test_all.py -v
  unittest3:
    docker:
      - image: circleci/python:3.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
       - checkout
       - attach_workspace:
           at: ~/.local
       - run:
           command: |
             python3 unit_tests/test_all.py -v
  createpostgres:
    docker:
      - image: circleci/python:2.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: circle_test
      POSTGRES_PASSWORD: ""
      PGPORT: 5432
      PGUSER: root
      PGDATABASE: unhtesting
      PGPASSWORD: ""
      PGHOST: localhost
    steps:
       - checkout
       - attach_workspace:
           at: ~/.local
       - run:
           command: |
             sudo apt update
             sudo apt install -y postgresql-client
             createdb -h localhost unhtesting -O root
             pip install --user psycopg2
             python scripts/CreateDB.py --dialect postgresql unhtesting
             python unit_tests/test_all.py
  createpostgres3:
    docker:
      - image: circleci/python:3.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: circle_test
      POSTGRES_PASSWORD: ""
      PGPORT: 5432
      PGUSER: root
      PGDATABASE: unhtesting
      PGPASSWORD: ""
      PGHOST: localhost
    steps:
       - checkout
       - attach_workspace:
           at: ~/.local
       - run:
           command: |
             sudo apt update
             sudo apt install -y postgresql-client python3-pip
             createdb -h localhost unhtesting -O root
             pip3 install --user psycopg2
             python3 scripts/CreateDBsabrs.py
  docs:
    docker:
      - image: circleci/python:2.7
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
       - checkout
       - attach_workspace:
           at: ~/.local
       - run:
           command: |
             rm -f ./setup.cfg # So sphinx-build doesn't go in ~/dbUtils
             pip install --user sphinx numpy
             pip install --user numpydoc
             make -C sphinx html | tee doc_output.txt
             # Fail (return nonzero) if there are warnings in output.
             ! grep -e "^build succeeded.*warning.*$" < doc_output.txt

workflows:
  main:
    jobs:
     - build
     - unittest:
         requires:
           - build
     - createpostgres:
         requires:
           - build
     - unittest3:
         requires:
           - build
     - createpostgres3:
         requires:
           - build
     - docs:
         requires:
           - build

# Schedule disables other triggers; nightly identical to main except
# triggers and branch restriction
  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * *"
          filters:
            branches:
              only:
                - master
                - main
    jobs:
     - build
     - unittest:
         requires:
           - build
     - createpostgres:
         requires:
           - build
     - unittest3:
         requires:
           - build
     - createpostgres3:
         requires:
           - build
     - docs:
         requires:
           - build
